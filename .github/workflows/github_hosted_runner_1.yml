###
# references:
# https://openbabel.org/docs/dev/Installation/install.html
# https://docs.github.com/en/actions/guides/building-and-testing-ruby
###

name: ELN GitHub Actions 2
on:
  workflow_dispatch:
  push:
    branches: [ ELN ]

jobs:
 TESTS:
    #runs-on: self-hosted # not working --> postgres service
    runs-on: ubuntu-latest
    env:
      LD_LIBRARY_PATH: /home/runner/work/chemotion_saurus/chemotion_saurus/bundle/ruby/2.6.0/bundler/gems/openbabel-gem-3e25548fd95c/openbabel/lib:/home/runner/.rvm/rubies/ruby-2.6.6/lib/:$LD_LIBRARY_PATH
      BABEL_LIBDIR: /home/runner/.rvm/rubies/ruby-2.6.6/lib/:$BABEL_LIBDIR
      
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
      
      # first checkout, before working dir is removed
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: ComPlat/chemotion_ELN
          path: .

      # TODO
      - name: change config files
        run: |
            #echo "PWD: $(pwd)"
            #echo "LS: $(ls)"
            cd config
            #cp database.yml.gitlab database.yml
            cp -f storage.yml.example storage.yml
            touch datacollectors.yml
            cp -f profile_default.yml.example profile_default.yml
            touch klasses.json
            # chemotion_test user:
            wget --no-verbose -O database.yml https://bwsyncandshare.kit.edu/s/ensebGtT4Fg8DKm/download
            # chemotion_test no pw:
            #wget --no-verbose -O database.yml  https://bwsyncandshare.kit.edu/s/K7wZcFiekbaW569/download
            # postgres user: ERROR
            #wget --no-verbose -O database.yml https://bwsyncandshare.kit.edu/s/zQgEiZYXenTxKXY/download

      # - name: Cache rvm
      #   uses: actions/cache@v2
      #   with:
      #     #path: /home/runner/.rvm/gems/ruby-2.6.6
      #     path: ~/rvm
      #     #key: ${{ runner.os }}-gems-v2-${{ hashFiles('**/Gemfile.lock') }} # cache for ~/.rvm/gems/ruby-2.6.6
      #     restore-keys: |
      #       ${{ runner.os }}-rvm
      
      - name: Download
        run: |
            cd  $GITHUB_WORKSPACE
            #wget --no-verbose -O rvm https://bwsyncandshare.kit.edu/s/zC8sgRmBo8Wis2r/download
            wget --no-verbose -O bundle https://bwsyncandshare.kit.edu/s/mRjsBD2eKLW9dkd/download
            tar -xf bundle
            wget --no-verbose -O node_modules https://bwsyncandshare.kit.edu/s/y6D7kdApHrZCrfZ/download
            tar -xf node_modules
            echo "DOWNLOADS"
            pwd
            ls
      
      # TODO check diff work folders: https://github.community/t/copying-test-file-from-docker-container-to-github-repository/17977/2
      # docker --volume?
      # remove all preinstalled stuff?

      - name: Set up Ubuntu
        #shell: bash -lc {0}
        run: |
          echo "BASH PROFILE"
          cat ~/.bash_profile
          #echo "UBUNTU: $(cat /etc/os-release)"
          #sudo apt-get install libboost-all-dev
          # cd /usr/lib/x86_64-linux-gnu/
          # ls
          # from install_production.sh
          sudo apt-get -y update -qq > /dev/null
          sudo apt-get -y install -qq ca-certificates apt-transport-https git curl dirmngr gnupg gnupg2 \
            autoconf automake bison libffi-dev libgdbm-dev libncurses5-dev openssh-server \
            g++ swig cmake libeigen3-dev \
            gconf-service libgconf-2-4 \
            libxslt-dev libxml2-dev \
            libyaml-dev sqlite3 libgmp-dev libreadline-dev libssl-dev \
            imagemagick libmagic-dev libmagickcore-dev libmagickwand-dev \
            libsass-dev \
            libnspr4 libnss3 libpango1.0-0 libxss1  \
            tzdata python-dev libsqlite3-dev libboost-all-dev p7zip-full \
            ufw ranger htop \
            inkscape pandoc \
            xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable \
            fonts-crosextra-caladea fonts-crosextra-carlito \
            fonts-dejavu fonts-dejavu-core fonts-dejavu-extra fonts-liberation2 fonts-liberation \
            fonts-linuxlibertine fonts-noto-core fonts-noto-extra fonts-noto-ui-core \
            fonts-opensymbol fonts-sil-gentium fonts-sil-gentium-basic \
            postgresql postgresql-client postgresql-contrib libpq-dev \
            net-tools \
            --fix-missing
            # sudo apt-get purge ruby rubygems
            # gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
            # curl -sSL https://get.rvm.io | bash -s stable --ruby=2.6.6 --auto-dotfiles
            # # ERROR
            # echo "source ~/.rvm/scripts/rvm" >> ~/.bashrc \
            #echo 'if [ -f ~/.bashrc ]; then \n  source ~/.bashrc\nfi' > ~/.bash_profile

      - name: postgres
        # env:
          # PG_DATABASE: chemotion_test
          # PG_HOST: localhost
          # PG_USER: chemotion_test
          # POSTGRES_PASSWORD: 123456
          # PG_PASSWORD: 123456
          # RAILS_ENV: test
          # POSTGRES_PORT: 5432
        run: |
          cd $GITHUB_WORKSPACE
          sudo -u postgres pg_ctlcluster 12 main start
          # TODO nosuperuser?
          #psql -d postgresql://postgres:postgres@localhost/postgres -c "CREATE ROLE chemotion_test LOGIN CREATEDB SUPERUSER"
          psql -d postgresql://postgres:postgres@localhost/postgres -c "CREATE ROLE chemotion_test LOGIN CREATEDB SUPERUSER PASSWORD '123456'"
          psql -d postgresql://postgres:postgres@localhost/postgres -c "CREATE DATABASE chemotion_test OWNER chemotion_test;"
          psql -d postgresql://chemotion_test:123456@localhost/chemotion_test -c 'CREATE EXTENSION IF NOT EXISTS "pg_trgm"; CREATE EXTENSION IF NOT EXISTS "hstore";  CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
          psql -d postgresql://chemotion_test:123456@localhost/chemotion_test -c "\du"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache bundle
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/bundle
          key: ${{ runner.os }}-bundle-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-bundle-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.6

      - name: Install Bundle
        run: |
          cd $GITHUB_WORKSPACE
          # TODO? --quiet
          bundle install --jobs 4 --retry 3 --path bundle

      - name: Node
        run: |
          cd $GITHUB_WORKSPACE
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

          #install Node, sudo not working
          #source ~/.nvm/nvm.sh && nvm use && 
          nvm install v12.22.1
          which npm
          # uninstall npm 6
          sudo rm -rf /usr/local/bin/npm
          source ~/.nvm/nvm.sh && nvm use 12.22.1 && npm install -g npm@7.11.1
          #sudo npm install -g npm@7.11.1
          echo "NPM:" 
          npm -v
          which npm
          echo "NVM:"
          nvm -v
          #which nvm #error
          echo "Node:"
          node -v

          source ~/.nvm/nvm.sh && nvm use && npm i
          source ~/.nvm/nvm.sh && nvm use && RAILS_ENV=test bundle exec rake db:test:prepare && npm test

      - name: Test Ruby
        run: |
          cd $GITHUB_WORKSPACE
          RAILS_ENV=test bundle exec rake db:test:prepare && bundle exec rspec spec/models/collections_sample_spec.rb --backtrace

      # - name: bundle
      #   # env:
      #   #   PG_DATABASE: chemotion_test
      #   #   PG_HOST: localhost
      #   #   PG_USER: chemotion_test
      #   #   POSTGRES_PASSWORD: 123456
      #   #   PG_PASSWORD: 123456
      #   #   RAILS_ENV: test
      #   #   POSTGRES_PORT: 5432
      #   run: |
      #     cd $GITHUB_WORKSPACE

      #     /bin/bash -l -c "source ~/.rvm/scripts/rvm && rvm install 2.6.6"
      #     /bin/bash -l -c "source ~/.rvm/scripts/rvm && gem install bundler -v 1.17.3 --no-document &&  bundle install -j 3 --retry 3 --full-index  --quiet --path bundle"
      #     /bin/bash -l -c "gem install rails -v 4.2.11.3 --no-document --quiet"

      #     # TODO
      #     # recreate symbolic links
      #     # cd bundle/../../nmr_sim-e2f91776aafd
      #     # sudo rm -r node_modules
      #     # sudo rm package.json
      #     # sudo ln -s /home/runner/work/chemotion_saurus/chemotion_saurus/node_modules node_modules
      #     # sudo ln -s /home/runner/work/chemotion_saurus/chemotion_saurus/package.json package.json
      #     #echo "NMR_SIM"
      #     #ls -la
      #     echo "GEMS"
      #     /bin/bash -l -c "source ~/.rvm/scripts/rvm && bundle info openbabel"
      #     /bin/bash -l -c "source ~/.rvm/scripts/rvm && bundle info json"

      # - name: log
      #   run: |
      #     # cd $GITHUB_WORKSPACE
      #     # echo "SYSTEM ENV"
      #     #printenv
      #     echo "BASH RC"
      #     cat ~/.bashrc
      #     # ERROR in
      #     echo "BASHPROFILE"
      #     cat ~/.bash_profile
      #     echo "RVM INFO"
      #     /bin/bash -l -c "source ~/.rvm/scripts/rvm && rvm info"
      #     # echo "RVM REQUIREMENTS"
      #     # rvm requirements 
      #     # echo "WHICH GEM"
      #     # which gem
      #     # echo "RUBY ENV"
      #     # gem env
      #     # echo $LD_LIBRARY_PATH
      #     # echo $BABEL_LIBDIR
      #     # cd ${{ github.workspace }}/bundle/ruby/2.6.0/bundler/gems/
      #     # rgrep "get_fingerprint" *
      #     # ls -la
      #     #cat /etc/postgresql/12/main/postgresql.conf
      #     #cat /var/log/postgresql/postgresql-12-main.log

      # - name: node
      #   run: |
          
      #     # export LD_LIBRARY_PATH=/home/runner/work/chemotion_saurus/chemotion_saurus/bundle/ruby/2.6.0/bundler/gems/openbabel-gem-3e25548fd95c/openbabel/lib:/home/runner/.rvm/#rubies/ruby-2.6.6/lib/:$LD_LIBRARY_PATH
      #     # export BABEL_LIBDIR=/home/runner/.rvm/rubies/ruby-2.6.6/lib/:$BABEL_LIBDIR

      #     cd bundle/ruby/2.6.0/bundler/gems/openbabel-gem-3e25548fd95c/openbabel/lib
      #     echo "L"
      #     ldd openbabel.so
      #     cd $GITHUB_WORKSPACE
          
      #     # echo "ACC TESTS"
      #     # source ~/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:test:prepare && bundle exec rspec spec/features
      #     echo "UNIT TESTS"
      #     /bin/bash -l -c "source ~/.rvm/scripts/rvm && "
      #     source ~/.rvm/scripts/rvm && source ~/.nvm/nvm.sh && nvm use && RAILS_ENV=test bundle exec rake db:test:prepare 
      #     #source ~/.rvm/scripts/rvm && 
          