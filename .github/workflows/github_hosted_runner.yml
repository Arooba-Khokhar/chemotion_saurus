###
# references:
# https://openbabel.org/docs/dev/Installation/install.html
###

name: ELN GitHub Actions 1

on:
  workflow_dispatch:
  push:
    branches: [ ELN ]

jobs:
 TESTS:
    #runs-on: self-hosted # not working --> postgres service
    runs-on: ubuntu-latest
    #runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
      
      # first checkout, before working dir is removed
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: ComPlat/chemotion_ELN
          path: .

      # TODO
      - name: change config files
        run: |
            #echo "PWD: $(pwd)"
            #echo "LS: $(ls)"
            cd config
            #cp database.yml.gitlab database.yml
            cp -f storage.yml.example storage.yml
            touch datacollectors.yml
            cp -f profile_default.yml.example profile_default.yml
            touch klasses.json
            # chemotion_test user:
            wget --no-verbose -O database.yml https://bwsyncandshare.kit.edu/s/ensebGtT4Fg8DKm/download
            # chemotion_test no pw:
            #wget --no-verbose -O database.yml  https://bwsyncandshare.kit.edu/s/K7wZcFiekbaW569/download
            # postgres user: ERROR
            #wget --no-verbose -O database.yml https://bwsyncandshare.kit.edu/s/zQgEiZYXenTxKXY/download

      # - name: Cache rvm
      #   uses: actions/cache@v2
      #   with:
      #     #path: /home/runner/.rvm/gems/ruby-2.6.6
      #     path: ~/rvm
      #     #key: ${{ runner.os }}-gems-v2-${{ hashFiles('**/Gemfile.lock') }} # cache for ~/.rvm/gems/ruby-2.6.6
      #     key: ${{ runner.os }}-rvm-${{ hashFiles('**/rvm/VERSION') }} # cache for vendor/bundle
      #     restore-keys: |
      #       ${{ runner.os }}-rvm
      
      - name: Download
        run: |
            # cd  $GITHUB_WORKSPACE
            # #wget --no-verbose -O rvm https://bwsyncandshare.kit.edu/s/zC8sgRmBo8Wis2r/download
            # wget --no-verbose -O bundle https://bwsyncandshare.kit.edu/s/mRjsBD2eKLW9dkd/download
            # tar -xf bundle

            wget --no-verbose -O node_modules https://bwsyncandshare.kit.edu/s/y6D7kdApHrZCrfZ/download
            tar -xf node_modules
            echo "DOWNLOADS"
            pwd
            ls
      
      # TODO check diff work folders: https://github.community/t/copying-test-file-from-docker-container-to-github-repository/17977/2
      # docker --volume?
      # remove all preinstalled stuff?

      - name: Set up Ubuntu
        run: |
          #echo "UBUNTU: $(cat /etc/os-release)"
          #sudo apt-get install libboost-all-dev
          # cd /usr/lib/x86_64-linux-gnu/
          # ls

          # from install_production.sh
          sudo apt-get -y update -qq > /dev/null
          sudo apt-get -y install -qq ca-certificates apt-transport-https git curl dirmngr gnupg gnupg2 \
            autoconf automake bison libffi-dev libgdbm-dev libncurses5-dev openssh-server \
            g++ swig cmake libeigen3-dev \
            gconf-service libgconf-2-4 \
            libxslt-dev libxml2-dev \
            libyaml-dev sqlite3 libgmp-dev libreadline-dev libssl-dev \
            imagemagick libmagic-dev libmagickcore-dev libmagickwand-dev \
            libsass-dev \
            libnspr4 libnss3 libpango1.0-0 libxss1  \
            tzdata python-dev libsqlite3-dev libboost-all-dev p7zip-full \
            ufw ranger htop \
            inkscape pandoc \
            xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable \
            fonts-crosextra-caladea fonts-crosextra-carlito \
            fonts-dejavu fonts-dejavu-core fonts-dejavu-extra fonts-liberation2 fonts-liberation \
            fonts-linuxlibertine fonts-noto-core fonts-noto-extra fonts-noto-ui-core \
            fonts-opensymbol fonts-sil-gentium fonts-sil-gentium-basic \
            postgresql postgresql-client postgresql-contrib libpq-dev \
            net-tools \
            --fix-missing
            
            gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
            curl -sSL https://get.rvm.io | bash -s stable --ruby=2.6.6 --auto-dotfiles
            #curl -sSL https://get.rvm.io | bash -s stable --ruby=2.6.6 
            #echo "source ~/rvm/scripts/rvm" >> ~/.bashrc \
            echo "source ~/.rvm/scripts/rvm" >> ~/.bashrc \
            echo 'if [ -f ~/.bashrc ]; then \n  source ~/.bashrc\nfi' > ~/.bash_profile
      
      # - name: log
      #   run: |
          #cat /etc/postgresql/12/main/postgresql.conf
          #cat /var/log/postgresql/postgresql-12-main.log

      - name: postgres
        env:
          PG_DATABASE: chemotion_test
          PG_HOST: localhost
          PG_USER: chemotion_test
          POSTGRES_PASSWORD: 123456
          PG_PASSWORD: 123456
          RAILS_ENV: test
          POSTGRES_PORT: 5432
        run: |
          cd $GITHUB_WORKSPACE
          sudo -u postgres pg_ctlcluster 12 main start
          # nosuperuser?
          #psql -d postgresql://postgres:postgres@localhost/postgres -c "CREATE ROLE chemotion_test LOGIN CREATEDB SUPERUSER"
          psql -d postgresql://postgres:postgres@localhost/postgres -c "CREATE ROLE chemotion_test LOGIN CREATEDB SUPERUSER PASSWORD '123456'"
          psql -d postgresql://postgres:postgres@localhost/postgres -c "CREATE DATABASE chemotion_test OWNER chemotion_test;"
          psql -d postgresql://chemotion_test:123456@localhost/chemotion_test -c 'CREATE EXTENSION IF NOT EXISTS "pg_trgm"; CREATE EXTENSION IF NOT EXISTS "hstore";  CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
          psql -d postgresql://chemotion_test:123456@localhost/chemotion_test -c "\du"


      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache bundle
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/bundle
          key: ${{ runner.os }}-bundle-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-bundle-

      # - name: bundle
      #   # env:
      #   #   PG_DATABASE: chemotion_test
      #   #   PG_HOST: localhost
      #   #   PG_USER: chemotion_test
      #   #   POSTGRES_PASSWORD: 123456
      #   #   PG_PASSWORD: 123456
      #   #   RAILS_ENV: test
      #   #   POSTGRES_PORT: 5432
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     source ~/.rvm/scripts/rvm && rvm install 2.6.6 
      #     source ~/.rvm/scripts/rvm && gem install bundler -v 1.17.3 --no-document &&  bundle install -j 3 --retry 3 --full-index  --quiet --path bundle
      #     gem install rails -v 4 --no-document --quiet

      #     # set environment variables for openbabel
      #     # for errors with openbabel.so:
      #     export LD_LIBRARY_PATH=/home/runner/work/chemotion_saurus/chemotion_saurus/bundle/ruby/2.6.0/bundler/gems/openbabel-gem-3e25548fd95c/openbabel/lib:/home/runner/.rvm/rubies/ruby-2.6.6/lib/:$LD_LIBRARY_PATH
      #     export BABEL_LIBDIR=/home/runner/.rvm/rubies/ruby-2.6.6/lib/:$BABEL_LIBDIR

      #     # TODO
      #     # recreate symbolic links
      #     # cd bundle/../../nmr_sim-e2f91776aafd
      #     # sudo rm -r node_modules
      #     # sudo rm package.json
      #     # sudo ln -s /home/runner/work/chemotion_saurus/chemotion_saurus/node_modules node_modules
      #     # sudo ln -s /home/runner/work/chemotion_saurus/chemotion_saurus/package.json package.json
      #     #echo "NMR_SIM"
      #     #ls -la

      #     echo "GEMS"
      #     bundle info openbabel
      #     bundle info json

      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: 12.22.1

      - name: node
        run: |
          cd $GITHUB_WORKSPACE

          # sudo nvm use system
          # sudo npm uninstall -g a_module

          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

          #install Node
          #source ~/.nvm/nvm.sh && nvm use && 
          sudo nvm install v12.22.1

          #source ~/.nvm/nvm.sh && nvm use && 
          npm install -g npm@7.11.1

          echo "NPM: $(npm -v)"
          echo "NVM: $(nvm -v)"
          echo "Node: $(node -v)"

          #source ~/.nvm/nvm.sh && nvm use && 
          npm i
          #RAILS_ENV=test bundle exec rake db:test:prepare
          #source ~/.nvm/nvm.sh && nvm use && 
          npm test
    
      # - name: Bundle Install & unit test ruby
      #   env:
      #     PG_DATABASE: chemotion_test
      #     PG_HOST: localhost
      #     PG_USER: chemotion_test
      #     POSTGRES_PASSWORD: 123456
      #     PG_PASSWORD: 123456
      #     RAILS_ENV: test
      #     POSTGRES_PORT: 5432
      #   run: |
      #     #echo "ENV"
      #     #printenv
      #     #echo "PG HBA: $(sudo cat /etc/postgresql/12/main/pg_hba.conf)"
      #     #echo "PG IDENT: $(sudo cat /etc/postgresql/12/main/pg_ident.conf)
      #     # cd /etc/postgresql/12/main/
      #     # sudo rm pg_hba.conf
      #     # ls
      #     # # download pg_hba.conf
      #     # sudo wget --no-verbose -O pg_hba.conf https://bwsyncandshare.kit.edu/s/HbKmQ26iwE7pg6B/download
      #     # ls

      #     # download global gems
      #     # cd ~/rvm/gems/ruby-2.6.6
      #     # wget --no-verbose -O gems https://bwsyncandshare.kit.edu/s/XfEdk9wXM22ZRgK/download 
      #     # tar -xf gems
      #     # cd gems/openbabel-gem-3e25548fd95c/openbabel/lib
      #     # echo "L"
      #     # ldd -v openbabel.so

      #     # # cd /home/runner/work/chemotion_saurus/chemotion_saurus
      #     # cd $GITHUB_WORKSPACE
      #     # rm -r vendor

      #     # # just download bundle
      #     # # download vendor with project gems
      #     # wget --no-verbose -O vendor  https://bwsyncandshare.kit.edu/s/BXLL2HnwCx47qxC/download
      #     # tar -xf vendor
          
      #     # # install poject gems
      #     cd $GITHUB_WORKSPACE
          
      #     #gem install libruby --no-document --quiet
          
      #     # echo "RAILS V"
      #     # rails -v


      #     # echo "LIBRUBY"
      #     # cd ~/.rvm/rubies/ruby-2.6.6/lib
      #     # ls


      #     echo "BABEL_LIBDIR"
      #     echo $BABEL_LIBDIR
      #     echo "obabel..."
      #     echo obabel -L formats

      #     cd bundle/ruby/2.6.0/bundler/gems/openbabel-gem-3e25548fd95c/openbabel/lib
      #     echo "LDD"
      #     ldd openbabel.so

      #     echo "POSTGRES"
      #     sudo -u postgres pg_ctlcluster 12 main status

          
          
      #     #sudo netstat -nlp | grep 5432
      #     #docker ps -a

      #     #psql "host=localhost port=5432 dbname=chemotion_test user=chemotion_test password=123456"
      #     # psql "host=localhost port=5432 dbname=postgres user=postgres password=postgres"
          

      #     echo "RSPEC"
      #     source ~/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:test:prepare 
      #     # source ~/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:create RAILS_ENV=test
      #     # source ~/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:migrate RAILS_ENV=test

      #     echo "RAILS CONSOLE"
      #     echo "CHEMOTION"
      #     rails runner Chemotion::OpenBabelService
      #     echo "OPENBABEL"
      #     rails runner OpenBabel::OBFingerprint

      #     source ~/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rspec spec/models/collections_sample_spec.rb
      #     #echo "TEST LOG: $(cat log/test.log)"
          
      #     #bundle exec rspec --exclude-pattern spec/{features}/**/*_spec.rb

      # - name: unit test ruby
      #   env:
      #     PG_DATABASE: chemotion_test
      #     PG_HOST: localhost
      #     PG_USER: chemotion_test
      #     PG_PASSWORD: 123456
      #     RAILS_ENV: test
      #     # WITH_COVERAGE: true
      #     # DISABLE_SPRING: 1
      #   run: |
      #     source ~/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:test:prepare --trace
      #     ldd -v libopenbabel.so.5
          # bundle exec rspec spec/api/user_api_spec.rb --trace
          # bundle exec rspec --exclude-pattern spec/{features}/**/*_spec.rb

      # - name: Set up node
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 12.22.1
      
      # - name: Install node modules
      #   # if: steps.cache.outputs.cache-hit != 'true'
      #   run: |
      #     echo "PWD: $(pwd)"
      #     #echo "LS: $(ls)"



      #     # unistall preinstalled
      #     # nvm use system
      #     # npm uninstall -g a_module

      #     #
      #     npm install -g npm@7.11.1

      #     echo "NPM: $(npm -v)"
      #     #echo "NVM: $(nvm -v)"

      #     # download preinstalled node_mdoules
      #     wget --no-verbose https://bwsyncandshare.kit.edu/s/S5pmzsC2SNZEEZ7/download
      #     tar -xf download
      #     echo "SIZE NODE MODULES 0: $(du -bsh node_modules)"
      #     echo "COUNT NODE MODULES 0: $(find node_modules -type f | wc -l)"

      #     npm i
      #     echo "SIZE NODE MODULES 1: $(du -bsh node_modules)"
      #     echo "COUNT NODE MODULES 1: $(find node_modules -type f | wc -l)"
      #     npm test

      #     # source ~/.nvm/nvm.sh && nvm use && npm i
      #     # source ~/.nvm/nvm.sh && nvm use && npm test
          
      # - name: Check file existence
      #   id: check_files
      #   uses: andstor/file-existence-action@v1
      #   with:
      #     files: 
      # - name: checkout
      #   uses: actions/checkout@v2
      #   with:
      #     repository: ComPlat/chemotion_ELN
      #     path: gitlab-runner

      # - name: Download build artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: gitlab-runner
      #     path: gitlab-runner
