name: ELN GitHub Actions 1

on:
  workflow_dispatch:
  push:
    branches: [ ELN ]

jobs:
 docker:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: 123456
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    # 1. checkout, before working dir is removed
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: ComPlat/chemotion_ELN
          path: .

      - name: change config files
        run: |
            echo "PWD: $(pwd)"
            echo "LS: $(ls)"
            cd config
            cp database.yml.gitlab database.yml
            cp -f storage.yml.example storage.yml
            touch datacollectors.yml
            cp -f profile_default.yml.example profile_default.yml
            touch klasses.json

      # - name: Docker copy
      #   run: |
      #       docker cp $(docker run -it -d complat/complat-ubuntu-runner:0.10.20):/home/gitlab-runner/node_modules .
      #       #docker cp $(docker run -it -d complat/complat-ubuntu-runner:0.10.20):/home/gitlab-runner .

      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: 12.22.1
      
      # TODO check diff work folders: https://github.community/t/copying-test-file-from-docker-container-to-github-repository/17977/2
      # docker --volume?
      # remove all preinstalled stuff?

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install node modules
        # if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "PWD: $(pwd)"
          #echo "LS: $(ls)"

          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

          # unistall preinstalled
          # nvm use system
          # npm uninstall -g a_module

          npm install -g npm@7.11.1
          nvm install v12.22.1

          echo "NPM: $(npm -v)"
          echo "NVM: $(nvm -v)"

          source ~/.nvm/nvm.sh && nvm use && npm i
          source ~/.nvm/nvm.sh && nvm use && npm test
          
      
      # - name: test postgres
      #   env:
      #     PG_DATABASE: chemotion_test
      #     PG_HOST: localhost
      #     PG_USER: chemotion_test
      #     PG_PASSWORD: 123456
      #     RAILS_ENV: test
      #     # WITH_COVERAGE: true
      #     # DISABLE_SPRING: 1
      #   run: |
      #       sudo -u postgres psql
      
      # - name: check
      #   run: |            
      #       cd docker
      #       echo "PWD: $(pwd)"
      #       echo "LS: $(ls)"

      # - name: Check file existence
      #   id: check_files
      #   uses: andstor/file-existence-action@v1
      #   with:
      #     files: 
      # - name: checkout
      #   uses: actions/checkout@v2
      #   with:
      #     repository: ComPlat/chemotion_ELN
      #     path: gitlab-runner

      # - name: Download build artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: gitlab-runner
      #     path: gitlab-runner

      # - name: Set up Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 2.6.6
    
      # - name: Bundle Install
      #   run: |
      #     cd gitlab-runner
      #     echo "CONFIGS"
      #     echo "BUNDLE: $(bundle -v)"
      #     echo "RAILS(rails -v)"
      #     echo "RUBY: $(ruby -v)"
      #     bundle config path shared/bundle
      #     gem install bundler -v 1.17.3 --no-document &&  bundle install -j 3 --retry 3 --full-index --path shared/bundle
      #     echo "SIZE BUNDLE: $(du -bsh shared/bundle)"
      # - name: unit test ruby
      #   env:
      #     PG_DATABASE: chemotion_test
      #     PG_HOST: localhost
      #     PG_USER: chemotion_test
      #     PG_PASSWORD: 123456
      #     RAILS_ENV: test
      #     # WITH_COVERAGE: true
      #     # DISABLE_SPRING: 1
      #   run: |
      #     cd gitlab-runner
      #     # bin/rails db:setup
      #     # rm RAILS_ENV=test?
      #     RAILS_ENV=test bundle exec rake db:test:prepare --trace && bundle exec rspec spec/api/user_api_spec.rb --trace
      #     # bundle exec rspec --exclude-pattern spec/{features}/**/*_spec.rb


      # - uses: actions/cache@v2
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-gems-${{ hashFiles('**/package.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-
