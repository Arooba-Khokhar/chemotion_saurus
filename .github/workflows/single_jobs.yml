name: self-hosted runner 2

on:
  workflow_dispatch:
  push:
    branches: [ ELN ]

jobs:
  docker:
    runs-on: self-hosted
    steps:
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "gitlab-runner/shared"
      - name: docker pull
        # todo check for newer tag
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          docker pull complat/complat-ubuntu-runner:0.10.20
          docker cp $(docker run -it -d complat/complat-ubuntu-runner:0.10.20):/home/gitlab-runner .
          # todo check if fully pulled

  checkout:
    needs: docker
    runs-on: self-hosted
    steps:
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "gitlab-runner/app"
      - name: init checkout ELN
      # todo always checkout?
        if: steps.check_files.outputs.files_exists == 'false' 
        uses: actions/checkout@v2
        with:
          repository: ComPlat/chemotion_ELN
          path: gitlab-runner

  config_files:
    needs: checkout
    runs-on: self-hosted
    steps:
      - name: change config files
        run: |
            pwd
            ls
            cd gitlab-runner/config
            cp database.yml.example database.yml
            cp -f storage.yml.example storage.yml
            touch datacollectors.yml
            cp -f profile_default.yml.example profile_default.yml
            touch klasses.json
  
  packages:
    needs: config_files
    # needs: docker
    runs-on: self-hosted
    steps:
      # - uses: actions/cache@v2
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-
      - run: |
            cd gitlab-runner
            source ~/.nvm/nvm.sh && nvm use && npm install
            npm update
            #source ~/.nvm/nvm.sh && nvm use && npm install --prefix shared/node_modules
            bundle install -j 3 --path shared/bundle
            echo "NPM"
            npm list | grep react@
            # echo "GEMS"
            # gem list
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     sudo: false

  # testjs:
  #   needs: packages
  #   #needs: docker
  #   runs-on: self-hosted
  #   steps:
  #       - run: |
  #           cd gitlab-runner
  #           echo "NPM"
  #           #npm list
  #           #npm test
  #           #source ~/.nvm/nvm.sh && nvm use && npm test
  #       - name: Setup tmate session
  #         uses: mxschmitt/action-tmate@v3
  #         with:
  #           sudo: false
  
  # testrb:
  #   needs: packages
  #   runs-on: self-hosted
  #   steps:
  #       - run: |
  #           cd gitlab-runner
  #           rspec --exclude-pattern spec/{features}/**/*_spec.rb
  #   env:
  #     POSTGRES_HOST: localhost
  #     POSTGRES_PORT: 5432

  # testacceptance:
  #   needs: packages
  #   runs-on: self-hosted
  #   steps:
  #       - run: |
  #           cd gitlab-runner
  #           rspec spec/features
  #   env:
  #     POSTGRES_HOST: localhost
  #     POSTGRES_PORT: 5432



